// Generated by CoffeeScript 1.10.0
var db, encryption, errors, logger;

db = require('../helpers/db_connect_helper').db_connect();

logger = require('printit')({
  prefix: 'controllers/user'
});

errors = require('../middlewares/errors');

encryption = require('../lib/encryption');

module.exports.create = function(req, res, next) {
  var error, error1, ref;
  if ((ref = req.body) != null) {
    delete ref._attachments;
  }
  try {
    req.body = encryption.encryptNeededFields(req.body);
  } catch (error1) {
    error = error1;
    return next(error);
  }
  if (req.params.id) {
    return db.get(req.params.id, function(err, doc) {
      if (doc) {
        return next(errors.http(409, "The document exists"));
      } else {
        return db.save(req.params.id, req.body, function(err, response) {
          if (err) {
            return next(errors.http(409, "The document exists"));
          } else {
            return res.status(201).send({
              _id: response.id
            });
          }
        });
      }
    });
  } else {
    return db.save(req.body, function(err, response) {
      if (err) {
        logger.error(err);
        return next(err);
      } else {
        return res.status(201).send({
          _id: response.id
        });
      }
    });
  }
};

module.exports.merge = function(req, res, next) {
  var error, error1, ref;
  try {
    req.body = encryption.encryptNeededFields(req.body);
  } catch (error1) {
    error = error1;
    return next(error);
  }
  if ((ref = req.body) != null) {
    delete ref._attachments;
  }
  return db.merge(req.params.id, req.body, function(err, response) {
    if (err) {
      logger.error(err);
      return next(err);
    } else {
      res.status(200).send({
        success: true
      });
      return next();
    }
  });
};
